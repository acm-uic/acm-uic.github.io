name: ci

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: write
  pages: write
  pull-requests: write
  id-token: write

jobs:
  check_build_and_deploy_job:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: Build PR and Deploy 🚀

    steps:
      - name: Checkout repo 🛎️
        uses: actions/checkout@v5

      - name: Setup pnpm 📦
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node 22.x 🔧
        uses: actions/setup-node@v6
        with:
          node-version: "22.x"
          cache: "pnpm"

      - name: Install Dependencies 📦
        run: |
          pnpm install

      - name: Build ⚙️
        run: |
          npm run build

      - name: Deploy Staging Environment 🚀
        uses: Azure/static-web-apps-deploy@latest
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/build"
          skip_app_build: true
          skip_deploy_on_missing_secrets: true

      - name: Run linters and formatter checks 💄
        run: |
          npm run lint:ci
          npm run prettier:ci

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Cleanup Staging Environment 🧹
    steps:
      - name: Cleanup Staging Environment 🧹
        uses: Azure/static-web-apps-deploy@latest
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
          skip_deploy_on_missing_secrets: true

  build_release_gh_pages:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Build and Push GitHub Pages Site 🚀
    concurrency:
      group: build_release_gh_pages
      cancel-in-progress: true
    steps:
      - name: Checkout repo 🛎️
        uses: actions/checkout@v5

      - name: Setup pnpm 📦
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node 22.x 🔧
        uses: actions/setup-node@v6
        with:
          node-version: "22.x"
          cache: "pnpm"

      - name: Setup Pages 📃
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Dependencies 📦
        run: |
          pnpm install

      - name: Run linter and formatter checks 🚨
        run: |
          npm run lint:ci
          npm run prettier:ci

      - name: Build ⚙️
        run: |
          npm run build

      - name: Upload artifact ⬆️
        uses: actions/upload-pages-artifact@v4
        with:
          path: build/

      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v4

  update_search_db:
    runs-on: ubuntu-latest
    name: Update search DB 🔍
    needs: build_release_gh_pages
    steps:
      - name: Checkout repo 🛎️
        uses: actions/checkout@v5

      - name: Run DocSearch Scraper 🔍
        uses: celsiusnarhwal/typesense-scraper@v2
        with:
          api-key: ${{ secrets.TYPESENSE_API_KEY }}
          host: typesense.acmuic.org
          port: 443
          protocol: https
          config: docsearch.config.json
